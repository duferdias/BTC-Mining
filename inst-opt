#!/bin/sh
clear
# Copyright: Darkstilo
# Miner por JayDDee | CPUMiner-OPT
# Referencias e Contribuições: AndreasBlk, FENIX_LINUX e 8TH
# Editado por duferdias

funtimer () {
sudo apt-get install at -y > /dev/null
echo -e "Eliminando PIDS"
 for _pids_ in `atq | awk '{print $1}'`; do
 atrm $_pids_ > /dev/null 2>&1
 done
crontab -r
echo -e "Parando Processos"
 for pids in `ps x|grep -v grep|grep cpuminer`; do
 kill -9 pids > /dev/null 2>&1
 done
echo -e "Iniciando TIMER"
echo "#!/bin/bash" > /bin/cron
echo "sudo screen -dmS mining cpuminer -a ${algorithm} -o stratum+tcp://${stratum} -u ${user} -p ${password} -t ${core} -R 30" >> /bin/cron
echo "sleep ${sllep}m" >> /bin/cron
echo 'for pids in $(ps x|grep -v grep|grep cpuminer); do' >> /bin/cron
echo 'kill -9 $pids' >> /bin/cron
echo 'done' >> /bin/cron
echo "at -f /bin/cron now + 30 min" >> /bin/cron
sudo chmod 777 /bin/cron && bash /bin/cron & > /dev/null
}


starts () {
#COLETANDO VARIAVEIS
algorithm="$1"
stratum="$2"
user="$3"
password="$4"
core="$5"
cpulimit="$6"
#INSTALANDO MINNER
echo -e "\033[44;1;37m  Este script irá baixar, compilar e instalar o CPUMiner-OPT v3.8.2.  \033[0m"
echo -e "\033[44;1;37m           Ao término, a mineração iniciará automaticamente.          \033[0m"
sleep 10
clear

echo -e "\033[44;1;37mAtualizando lista de pacotes...\033[0m"
sudo apt-get update > /dev/null
sleep 2
clear

echo -e "\033[44;1;37mInstalando dependências...\033[0m"
sudo apt-get install screen -y > /dev/null
sudo apt-get install build-essential libssl-dev libcurl4-openssl-dev libjansson-dev libgmp-dev gcc autoconf make automake -y > /dev/null
memsize=`free | awk '/Mem/ { print $2 }'`
swapsize=`free | awk '/Swap/ { print $2 }'`
if [ "$memsize" -lt "1000000" ]
then
 if [ "$swapsize" -eq "0" ]
 then
  echo -e "Foi detectado que você possui menos que 1GB de RAM!"
  echo -e "Será criada uma partição SWAP de 1GB para que o CPUMiner-OPT seja compilado com sucesso."
  sudo dd if=/dev/zero of=/var/swap.img bs=1024k count=1000 > /dev/null
  sudo mkswap /var/swap.img > /dev/null
  sudo chmod 600 /var/swap.img
  sudo swapon /var/swap.img
 fi
fi
sleep 2
clear

echo -e "\033[44;1;37mBaixando CPUMiner-OPT v3.8.2...\033[0m"
wget -q https://github.com/JayDDee/cpuminer-opt/archive/v3.8.2.tar.gz
sleep 2
clear

echo -e "\033[44;1;37mExtraindo CPUMiner-OPT v3.8.2...\033[0m"
tar -zxvf v3.8.2.tar.gz > /dev/null
cd cpuminer-opt-3.8.2
sleep 2
clear

echo -e "\033[44;1;37mCompilando CPUMiner-OPT v3.8.2...(pode demorar um pouco)\033[0m"
make distclean || echo clean
rm -f config.status
./autogen.sh || echo done
CFLAGS="-O3 -march=native -Wall" ./configure --with-curl
make -j 4
strip -s cpuminer
# ln ./cpuminer ../cpuminer
sudo mv cpuminer /usr/local/bin/
sleep 2
clear

echo -e "\033[01;32mInstalação e configuração concluídas com sucesso."
sleep 3
clear
#INSTALANDO CPU LIMIT
sudo apt-get update > /dev/null
sudo apt-get install aptitude -y > /dev/null
sudo aptitude install cpulimit
[[ ${cpulimit} != "" ]] && sudo screen -dmS cpu cpulimit -e cpuminer -l ${cpulimit}
#EXECUTANDO
if [[ $timer = @(s|S) ]]; then
 if [[ $timevar != "" ]]; then 
 sllep="$timevar"
 else
 read -p "Minutos de Mineração: " sllep
 fi
funtimer 
else
sudo screen -dmS mining cpuminer -a ${algorithm} -o stratum+tcp://${stratum} -u ${user} -p ${password} -t ${core} -R 30
fi
sleep 2
clear
echo -e "\033[37;41mSua mineração foi iniciada! Para visualizar o processo digite o comando abaixo:\033[01;0m \n"
echo -e "\033[37;41mCOMANDO [screen -x mining]\033[0m"
sleep 1
}

__ini__ () {
#INICIANDO COLETA
echo -e "Forma de Uso:\nbash $0 'algorithm' 'stratum' 'user' 'password' 'core' 'cpulimit'\nbash $0 neoscrypt teste.tk:9999 admin.worker01 x 8 0"
algorithm="$1"
stratum="$2"
user="$3"
password="$4"
core="$5"
cpulimit="$6"
timer="$7"
[[ "$(echo ${algorithm})" = "" ]] && read -p "Selecione o algorítmo: " algorithm
[[ "$(echo ${stratum})" = "" ]] && read -p "Proxy com porta da Pool ou Stratum da Pool: " stratum
[[ "$(echo ${user})" = "" ]] && read -p "Selecione o usuário ou carteira: " user
[[ "$(echo ${password})" = "" ]] && read -p "Selecione a senha do usuário ou símbolo da moeda na forma c=SIGLA: " password
[[ "$(echo ${core})" = "" ]] && read -p "Núcleos: " core
[[ "$(echo ${cpulimit})" = "" ]] && read -p "cpu limit: " cpulimit
[[ "$(echo ${timer})" = "" ]] && read -p "Iniciar timer [s|n]: " timer
if [[ "$(echo ${cpulimit})" -gt "0" ]]; then
starts ${algorithm} ${stratum} ${user} ${password} ${core} ${cpulimit}
else
starts ${algorithm} ${stratum} ${user} ${password} ${core} 0
fi
}
timevar="$7"
__ini__ "$1" "$2" "$3" "$4" "$5" "$6"
echo -ne "\033[0m"
